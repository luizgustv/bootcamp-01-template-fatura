spring.application.name=Fatura

server.port=8082

#SQL
spring.datasource.platform= ${DATASOURCE:postgres}
spring.datasource.url= ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/fatura}
spring.datasource.username= ${DATASOURCE_USERNAME:keycloak}
spring.datasource.password= ${DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=${DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

#JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
#tempo maximo de execucao de uma query
spring.jpa.properties.javax.persistence.query.timeout = 50

#SPRING SECURITY
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

#ACTUATOR
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true

##FEIGN
host.cartao=${URL_CARTAO:http://localhost:8888}
feign.client.config.integracoes.read-timeout=100
feign.client.config.integracoes.connect-timeout=100

#PROMETHEUS
management.metrics.tags.aplicacao=servico de transacao
management.metrics.tags.ambiente=desenvolvimento

#JAEGER
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

#SPRING CLOUD STARTER
opentracing.spring.cloud.jdbc.enabled=false
opentracing.jaeger.log-spans=false

#KAFKA
spring.kafka.bootstrap-servers=${KAFKA_HOST:http://localhost:9092}
spring.kafka.topic.transactions=transacoes
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:fatura}
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

#EXIBIR LOG DEBUG
#logging.level.root=DEBUG
